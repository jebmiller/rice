<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2005-2013 The Kuali Foundation

    Licensed under the Educational Community License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.opensource.org/licenses/ecl2.php

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
    <info>
        <title>Kuali Rice ${project.version} Release Notes</title>
        <edition>${project.version}</edition>
        <pubdate>Released: ${docbook.build.timestamp}</pubdate>
    </info>
    <section xml:id="overview" xreflabel="Overview">
        <title>Overview</title>
        <para>Welcome to Rice ${project.version}! </para>
        <section>
            <title>Release Highlights</title>
            <para>This release consists of a single security fix. There are no database changes and it should be a drop-in replacement.</para>
        </section>
        <section>
            <title>Download</title>
            <para>Kuali Rice ${project.version} can be downloaded from the Rice website at <link xlink:show="new" xlink:href="http://kuali.org/rice/download">http://kuali.org/rice/download</link>.</para>
            <para>There are three different distributions of Rice available: source, binary and
                server. Please read the <link xlink:href="http://site.kuali.org/rice/${project.version}/reference/html/IG.html">Installation Guide</link> for
                more details on each of these distributions.</para>
            <para>Applications can also consume Rice from the maven site at <link
                    xlink:href="http://search.maven.org/#search|ga|1|org.kuali.rice"
                    >http://search.maven.org/#search|ga|1|org.kuali.rice</link>.</para>
        </section>
        <section>
            <title>Documentation</title>
            <para>API Documentation can be found at <link xlink:show="new" xlink:href="http://site.kuali.org/rice/${project.version}/apidocs/index.html">http://site.kuali.org/rice/${project.version}/apidocs/index.html</link></para>
            <para>Formal documentation can be found at <link xlink:show="new"
                    xlink:href="http://site.kuali.org/rice/${project.version}/reference/html/index.html"
                    >http://site.kuali.org/rice/${project.version}/reference/html/index.html</link>.
                This documentation is still in the process of review and update  which will continue
                through subsequent releases, so please follow the notes in each document to report
                any outdated information.</para>
        </section>
        <section>
            <title>Contact</title>
            <para>If you encounter any difficulty, please don't hesitate to contact the Rice team on
                our public collaboration mailing list at <email>rice.collab@kuali.org</email>.
                Please indicate that you are using the ${project.version} version of Rice.</para>
        </section>
    </section>
    <section xml:id="items_addressed_in_rice">
    <title>Items Addressed in Rice ${project.version}</title>


    <section>
      <title>Bug Fix</title>
      <para><itemizedlist>        
        <listitem>
          <para>[<link xlink:href='https://jira.kuali.org/browse/KULRICE-14279'>KULRICE-14279</link>] - Fix XSS vulnerability in returnLocation parameter</para>
        </listitem>
      </itemizedlist></para>
    </section>
  </section>
  
  <section xml:id="impacting_changes">
    <title>Impacting Changes</title>
    <section>
      <title>Fix XSS vulnerability in returnLocation parameter</title>
      <para>This fixes a security issue which has two attack vectors:</para>
      <para>
        <itemizedlist>
          <listitem>Embedded JavaScript inside of the returnLocation parameter</listitem>
          <listitem>Using the returnLocation parameter to return the user to an unexpected domain</listitem>
        </itemizedlist>
      </para>
      <para>The fix to both of these issues involves a new whitelist approach to the values allowed in the returnLocation parameter similar to the whitelist used for pages displayed in the portal.  There is a new configuration property named <code>rice.backLocation.allowed.regex</code> which controls the URLs which are allowed to be present in the returnLocation parameter.  It defaults to a regular expression which would allow URLs which start with the following configuration properties:</para>
      <para>
        <itemizedlist>
          <listitem><code>application.url</code> (e.g. my.edu/kfs or my.edu/rice on a standalone Rice server)</listitem>
          <listitem><code>rice.server.url</code> (e.g. my.edu/rice)</listitem>
          <listitem><code>appserver.url</code> (e.g. my.edu)</listitem>
        </itemizedlist>
      </para>
      <para>When bringing in this fix you should also ensure the three values above are set appropriately. The third path is intended to be a general "catch all" which would allow any return locations on the same domain as your application. The value for this regular expression may need to be modified if you are using multiple domains for different applications (e.g. rice.my.edu, kfs.my.edu, etc.), especially on the Rice standalone server since it will need to be configured to allow the user to return to any application which sends the user to the Rice server (e.g. for document search, action list, person lookup, etc.). If the returnLocation does not match one of these paths it will return the user to a configurable location with the <code>rice.backLocation.default.url</code> property which defaults to the <code>application.url</code>. This value should be customized to return the user to a reasonable location in the case that they attempt to follow an invalid return location.</para>
      <para>Bringing in this patch does not guarantee your codebase is immediately secure from this attack. If the <code>getBackLocation</code> method on the <code>KualiForm</code> or <code>LookupableHelperService</code> classes has been overridden in your application you will need to sanitize the return location by invoking the <code>WebUtils#sanitizeBackLocation</code> method in order for it to be secure.</para>
    </section>
  </section>
</article>
